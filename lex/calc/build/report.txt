State 8 conflicts: 2 shift/reduce
State 9 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program expr '\n'
    2        | ε

    3 expr: INTEGER
    4     | expr '+' expr
    5     | expr '-' expr


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '+' (43) 4
    '-' (45) 5
    error (256)
    INTEGER <num> (258) 3


Nonterminals, with rules where they appear

    $accept (7)
        on left: 0
    program (8)
        on left: 1 2
        on right: 0 1
    expr <num> (9)
        on left: 3 4 5
        on right: 1 4 5


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • expr '\n'

    $end     shift, and go to state 2
    INTEGER  shift, and go to state 3

    expr  go to state 4


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 expr: INTEGER •

    $default  reduce using rule 3 (expr)


State 4

    1 program: program expr • '\n'
    4 expr: expr • '+' expr
    5     | expr • '-' expr

    '\n'  shift, and go to state 5
    '+'   shift, and go to state 6
    '-'   shift, and go to state 7


State 5

    1 program: program expr '\n' •

    $default  reduce using rule 1 (program)


State 6

    4 expr: expr '+' • expr

    INTEGER  shift, and go to state 3

    expr  go to state 8


State 7

    5 expr: expr '-' • expr

    INTEGER  shift, and go to state 3

    expr  go to state 9


State 8

    4 expr: expr • '+' expr
    4     | expr '+' expr •
    5     | expr • '-' expr

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7

    '+'       [reduce using rule 4 (expr)]
    '-'       [reduce using rule 4 (expr)]
    $default  reduce using rule 4 (expr)

    shift/reduce conflict on token '+':
        4 expr: expr '+' expr •
        4 expr: expr • '+' expr
      Example: expr '+' expr • '+' expr
      Shift derivation
        expr
        ↳ 4: expr '+' expr
                      ↳ 4: expr • '+' expr
      Reduce derivation
        expr
        ↳ 4: expr                 '+' expr
             ↳ 4: expr '+' expr •

    shift/reduce conflict on token '-':
        4 expr: expr '+' expr •
        5 expr: expr • '-' expr
      Example: expr '+' expr • '-' expr
      Shift derivation
        expr
        ↳ 4: expr '+' expr
                      ↳ 5: expr • '-' expr
      Reduce derivation
        expr
        ↳ 5: expr                 '-' expr
             ↳ 4: expr '+' expr •



State 9

    4 expr: expr • '+' expr
    5     | expr • '-' expr
    5     | expr '-' expr •

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7

    '+'       [reduce using rule 5 (expr)]
    '-'       [reduce using rule 5 (expr)]
    $default  reduce using rule 5 (expr)

    shift/reduce conflict on token '+':
        5 expr: expr '-' expr •
        4 expr: expr • '+' expr
      Example: expr '-' expr • '+' expr
      Shift derivation
        expr
        ↳ 5: expr '-' expr
                      ↳ 4: expr • '+' expr
      Reduce derivation
        expr
        ↳ 4: expr                 '+' expr
             ↳ 5: expr '-' expr •

    shift/reduce conflict on token '-':
        5 expr: expr '-' expr •
        5 expr: expr • '-' expr
      Example: expr '-' expr • '-' expr
      Shift derivation
        expr
        ↳ 5: expr '-' expr
                      ↳ 5: expr • '-' expr
      Reduce derivation
        expr
        ↳ 5: expr                 '-' expr
             ↳ 5: expr '-' expr •

